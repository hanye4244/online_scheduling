# coding=utf-8
'''
@Author: Ye Han
@Date: 2020-04-19 16:02:17
@LastEditTime: 2020-05-23 09:32:12
@LastEditors: Ye Han
@Description:
@FilePath: \Online_Scheduling\passenger_demand.py
@Copyright (c) 2020 - Ye Han
All rights reserved.
'''
import numpy as np


def fun(x):
    a = round(x/1000)
    return a
    pass


# num_1 = [7174, 7838, 7481, 7125, 7019, 7443, 6846, 6824, 6724, 6063, 5720, 5186, 4928, 4536, 4722, 5125, 5528, 5910, 4914, 5206, 4197, 4106, 5903, 7135, 7598, 7912, 9239, 8859, 9592, 10655, 11770, 12230, 13580, 12511, 14105,
#          15508, 15500, 13781, 12018, 11152, 10543, 9772, 10052, 9636, 9525, 9297, 9720, 9031, 8713, 7197, 8405, 7130, 7100, 6307, 6097, 6364, 6736, 6984, 7218, 8923, 8558, 8504, 7720, 8178, 6738, 6569, 6225, 6073, 6354, 6442, 7144, 7905]

# num_2 = [6704, 6532, 5555, 5742, 5599, 5830, 5553, 5212, 5672, 5070, 4878, 5018, 5426, 4777, 4050, 3819, 4775, 5304, 4955, 5151, 5303, 5580, 6577, 6753, 7670, 8586, 8258, 8540, 8616, 9415, 9361, 8748, 10805, 10404, 10386,
#          9844, 10183, 9745, 8140, 8020, 7335, 6917, 6393, 7128, 7054, 7102, 7058, 6066, 5870, 5661, 5980, 5641, 5336, 6409, 6148, 6279, 6735, 6756, 5659, 6492, 6184, 6361, 5571, 6088, 4902, 4533, 4734, 4494, 4545, 4861, 5509, 6242]

# num_3 = [9795, 12120, 13603, 13016, 13554, 14363, 14234, 14702, 14716, 14708, 14460, 14140, 13128, 12515, 10387, 8639, 6546, 5477, 5879, 7301, 7861, 8786, 9972, 10463, 11033, 11633, 11272, 10609, 10387, 12243, 12468, 13196, 13428, 14613, 14912,
#          15250, 15034, 14153, 12288, 11163, 11054, 11378, 11542, 12242, 12225, 12050, 11919, 12702, 12651, 11069, 10196, 9552, 9566, 9316, 9661, 9243, 9177, 9809, 10838, 11389, 11409, 10571, 10902, 9966, 8776, 7540, 7804, 8193, 7996, 7941, 8439, 7929]

# num_4 = [8291, 7834, 7534, 7299, 7537, 6740, 6439, 6506, 6742, 6679, 6851, 6297, 6274, 6460, 5297, 4092, 3622, 4023, 4401, 4352, 4621, 4813, 5473, 7018, 6535, 8127, 10098, 10821, 11360, 13340, 14416, 14412, 14841, 14543, 16887, 16202,
#          15706, 14650, 12418, 11277, 10622, 10543, 10345, 10682, 10807, 10818, 10422, 10437, 8176, 8615, 7873, 7788, 7537, 7266, 6893, 6747, 7351, 8306, 9321, 10574, 9774, 8728, 8460, 7892, 7020, 5754, 6590, 6596, 6999, 7250, 7822, 8701]
# passenger_demand_1 = np.array(
#     list(map(lambda x: fun(x), num_1))).reshape(1, 72)
# passenger_demand_2 = np.array(
#     list(map(lambda x: fun(x), num_2))).reshape(1, 72)
# passenger_demand_3 = np.array(
#     list(map(lambda x: fun(x), num_3))).reshape(1, 72)
# passenger_demand_4 = np.array(
#     list(map(lambda x: fun(x), num_4))).reshape(1, 72)
# print(passenger_demand_1, passenger_demand_2,
#       passenger_demand_3, passenger_demand_4)


def passenger_demand(number_of_region, t, passenger_demand_max):
    passenger_demand = np.array([[7,  8,  7,  7,  7,  7,  7,  7,  7,  6,  6,  5,  5,  5,  5,  5,  6,  6,  5,  5,  4,  4,  6,  7,
                                  8,  8,  9,  9, 10, 11, 12, 12, 14, 13, 14, 16, 16, 14, 12, 11, 11, 10, 10, 10, 10,  9, 10,  9,
                                  9,  7,  8,  7,  7,  6,  6,  6,  7,  7,  7,  9,  9,  9,  8,  8,  7,  7,  6,  6,  6,  6,  7,  8],
                                 [7,  7,  6,  6,  6,  6,  6,  5,  6,  5,  5,  5,  5,  5,  4,  4,  5,  5,  5,  5,  5,  6,  7,  7,
                                  8,  9, 8, 9,  9,  9,  9,  9, 11, 10, 10, 10, 10, 10,  8,  8,  7,  7,  6,  7,  7,  7,  7,  6, 6,  6,  6,  6,  5,  6,  6,  6,  7,  7,  6,  6,  6,  6,  6,  6,  5,  5,  5,  4,  5,  5,  6,  6],
                                 [10, 12, 14, 13, 14, 14, 14, 15, 15, 15, 14, 14, 13, 13, 10,  9,  7,  5,  6,  7,  8,  9, 10, 10,
                                  11, 12, 11, 11, 10, 12, 12, 13, 13, 15, 15, 15, 15, 14, 12, 11, 11, 11, 12, 12, 12, 12, 12, 13,
                                  13, 11, 10, 10, 10,  9, 10,  9,  9, 10, 11, 11, 11, 11, 11, 10,  9,  8,  8,  8,  8,  8,  8,  8],
                                 [8,  8,  8,  7,  8,  7,  6,  7,  7,  7,  7,  6,  6,  6,  5,  4,  4,  4,  4,  4,  5,  5,  5,  7,
                                  7,  8, 10, 11, 11, 13, 14, 14, 15, 15, 17, 16, 16, 15, 12, 11, 11, 11, 10, 11, 11, 11, 10, 10,
                                  8,  9,  8,  8,  8,  7,  7,  7,  7,  8,  9, 11, 10,  9,  8,  8,  7,  6,  7,  7,  7,  7,  8,  9]]) - passenger_demand_max
    passenger_demand_slot = passenger_demand[:, t]
    return passenger_demand_slot.reshape(number_of_region, 1)


if __name__ == '__main__':
    number_of_region = 4
    passenger_demand(number_of_region, 1)
